#In this SQL code, I'm querying a database that's holding a digital media store's data to answer questions about the data. 

#1. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE country <> 'USA';

#2. Show only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE country = 'Brazil';

#3. Find the Invoices of customers who are from Brazil.
SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.InvoiceDate, inv.BillingCountry
FROM chinook.invoices AS inv
LEFT JOIN chinook.customers AS cust
ON inv.CustomerId = cust.CustomerId
WHERE inv.BillingCountry = 'Brazil';

#4. Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title = 'Sales Support Agent';

#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices;

#6. Provide a query that shows the invoices associated with each sales agent.
SELECT emp.LastName, emp.FirstName, inv.InvoiceId
FROM chinook.employees AS emp
JOIN chinook.customers AS cust
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices AS inv
ON inv.CustomerId = cust.CustomerId;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees AS emp 
JOIN chinook.Customers AS cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices AS Inv 
ON Inv.CustomerId = cust.CustomerId;

#8. How many Invoices were there in 2009?
SELECT COUNT(InvoiceID)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

#9. What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name, i.InvoiceLineId
FROM chinook.Invoice_items i
JOIN chinook.Tracks t
ON i.TrackId = t.TrackId;

#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT ar.Name AS Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.Tracks t
ON i.TrackID = t.TrackID
Inner JOIN chinook.albums a
ON a.AlbumID = t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID = a.ArtistID;

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.albums a
ON a.AlbumId = t.AlbumId
JOIN chinook.media_types m
ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.genres g
ON g.GenreId = t.GenreId;

#13. Show the total sales made by each sales agent.
SELECT emp.FirstName, emp.LastName, ROUND(SUM(inv.Total), 2) AS 'Total Sales'
FROM chinook.employees AS emp
JOIN chinook.customers AS cust
ON emp.EmployeeId = cust.SupportRepId
JOIN chinook.invoices AS inv
ON inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent'
GROUP BY emp.FirstName;

#14. Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName, emp.LastName, ROUND(SUM(Inv.Total), 2) as 'Total Sales'
FROM chinook.employees AS emp
JOIN chinook.customers AS cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices AS inv 
ON inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2)) DESC LIMIT 1;

#15. List all the tracks that are in the Music playlist.
SELECT t.Name AS 'Track Name'
FROM chinook.tracks AS t
JOIN chinook.playlist_track AS pt
ON t.TrackId = pt.TrackId
JOIN chinook.playlists AS p
ON pt.PlaylistId = p.PlaylistId
WHERE p.Name = 'Music';

#16. Which artist released the most albums?
SELECT ar.Name AS artist_name, COUNT(al.Title) AS album_count
FROM chinook.artists ar
JOIN chinook.albums al
ON ar.ArtistId = al.ArtistId
GROUP BY ar.Name
ORDER BY album_count DESC
LIMIT 1;

--17. Which track appears in the most playlists?
SELECT t.Name AS track_name, COUNT(pt.PlaylistId) AS playlist_count
FROM chinook.tracks AS t
JOIN chinook.playlist_track AS pt
ON t.TrackId = pt.TrackId
JOIN chinook.playlists AS p
ON pt.PlaylistId = p.PlaylistId
GROUP BY t.Name
ORDER BY playlist_count desc
LIMIT 1;
